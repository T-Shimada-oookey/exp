name: Laravel CI Level 0

on:
  pull_request:
    branches: [ develop ]
  push:
    branches: [ develop ]

jobs:
  laravel-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, intl, pdo_sqlite, dom, fileinfo
          coverage: none

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: src/vendor
          key: ${{ runner.os }}-php-${{ hashFiles('src/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Composer dependencies
        working-directory: src
        run: composer install --no-interaction --no-progress --prefer-dist

      - name: Copy .env
        working-directory: src
        run: cp .env.example .env

      - name: Generate app key
        working-directory: src
        run: php artisan key:generate

      - name: Check artisan works
        working-directory: src
        run: php artisan about

      # 以下レベル1
      - name: Run tests (smoke)
        working-directory: src
        run: php artisan test --testsuite=Feature

      # 以下レベル2
      - name: Prepare SQLite database file
        working-directory: src
        run: |
          mkdir -p database
          rm -f database/database.sqlite
          touch database/database.sqlite

      - name: Set testing DB env
        working-directory: src
        run: |
          # 必要な最小限のテスト用設定を .env に追記
          {
            echo "APP_ENV=testing"
            echo "CACHE_DRIVER=array"
            echo "SESSION_DRIVER=array"
            echo "QUEUE_CONNECTION=sync"
            echo "DB_CONNECTION=sqlite"
            echo "DB_DATABASE=$(pwd)/database/database.sqlite"
          } >> .env

      - name: Migrate (for Level 2)
        working-directory: src
        run: php artisan migrate --force

      - name: Run tests (Level 2)
        working-directory: src
        run: php artisan test